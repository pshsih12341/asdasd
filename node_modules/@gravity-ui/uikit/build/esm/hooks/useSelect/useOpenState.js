import React from 'react';
import { useControlledState } from '../useControlledState/useControlledState';
export const useOpenState = (props) => {
    var _a;
    const { onOpenChange, onClose } = props;
    const handleOpenChange = React.useCallback((newOpen) => {
        onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(newOpen);
        if (newOpen === false && onClose) {
            onClose();
        }
    }, [onOpenChange, onClose]);
    const [open, setOpenState] = useControlledState(props.open, (_a = props.defaultOpen) !== null && _a !== void 0 ? _a : false, handleOpenChange);
    const toggleOpen = React.useCallback((val) => {
        const newOpen = typeof val === 'boolean' ? val : !open;
        setOpenState(newOpen);
    }, [open, setOpenState]);
    return {
        open,
        toggleOpen,
    };
};
