import React from 'react';
import { block } from '../utils/cn';
import { AvatarIcon } from './AvatarIcon';
import { AvatarImage } from './AvatarImage';
import { AvatarText } from './AvatarText';
import { DEFAULT_AVATAR_SIZE } from './constants';
import './Avatar.css';
const b = block('avatar');
export const Avatar = React.forwardRef((props, ref) => {
    const { size = DEFAULT_AVATAR_SIZE, theme = 'normal', view = 'filled', backgroundColor, borderColor, title, 'aria-label': ariaLabel, 'aria-labelledby': ariaLabelledby, className, style: styleProp, qa, } = props;
    const style = Object.assign({ backgroundColor, color: borderColor }, styleProp);
    const renderContent = () => {
        if ('imgUrl' in props && props.imgUrl) {
            return (React.createElement(AvatarImage, { className: b('image'), imgUrl: props.imgUrl, fallbackImgUrl: props.fallbackImgUrl, sizes: props.sizes, srcSet: props.srcSet, alt: props.alt || title, loading: props.loading, size: size }));
        }
        if ('icon' in props && props.icon) {
            return (React.createElement(AvatarIcon, { className: b('icon'), icon: props.icon, color: props.color, size: size }));
        }
        if ('text' in props && props.text) {
            return (React.createElement(AvatarText, { className: b('text'), text: props.text, color: props.color, size: size }));
        }
        return null;
    };
    return (React.createElement("div", { className: b({ size, theme, view, 'with-border': Boolean(borderColor) }, className), title: title, role: "img", "aria-label": ariaLabel, "aria-labelledby": ariaLabelledby, style: style, "data-qa": qa, ref: ref }, renderContent()));
});
Avatar.displayName = 'Avatar';
