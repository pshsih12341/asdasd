'use client';
import React from 'react';
import { useBodyScrollLock } from '../../hooks';
import { Portal } from '../Portal/Portal';
import { SheetContentContainer } from './SheetContent';
import { sheetBlock } from './constants';
import './Sheet.css';
export const Sheet = ({ children, onClose, visible, id, title, className, contentClassName, swipeAreaClassName, allowHideOnContentScroll, hideTopBar, qa, }) => {
    const [open, setOpen] = React.useState(visible);
    const [prevVisible, setPrevVisible] = React.useState(visible);
    useBodyScrollLock({ enabled: open });
    if (!prevVisible && visible) {
        setOpen(true);
    }
    if (visible !== prevVisible) {
        setPrevVisible(visible);
    }
    const hideSheet = () => {
        if (onClose) {
            onClose();
        }
        setOpen(false);
    };
    if (!open) {
        return null;
    }
    return (React.createElement(Portal, null,
        React.createElement("div", { "data-qa": qa, className: sheetBlock(null, className) },
            React.createElement(SheetContentContainer, { id: id, content: children, contentClassName: contentClassName, swipeAreaClassName: swipeAreaClassName, title: title, visible: visible, allowHideOnContentScroll: allowHideOnContentScroll, hideTopBar: hideTopBar, hideSheet: hideSheet }))));
};
