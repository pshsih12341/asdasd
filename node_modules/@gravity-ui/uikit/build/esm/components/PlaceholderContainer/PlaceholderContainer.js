import React from 'react';
import { Button } from '../Button';
import { block } from '../utils/cn';
import { componentClassName } from './constants';
import './PlaceholderContainer.css';
const b = block(componentClassName);
const PlaceholderContainerAction = (props) => {
    return (React.createElement("div", { className: b('action') },
        React.createElement(Button, Object.assign({ className: b('action-btn'), view: props.view || 'normal', size: props.size || 'm', loading: Boolean(props.loading), disabled: Boolean(props.disabled), href: props.href || '' }, (props.onClick ? { onClick: props.onClick } : {})), props.text)));
};
export const PlaceholderContainer = ({ direction = 'row', align = 'center', size = 'l', className, title, description, image, content, actions, }) => {
    const renderTitle = () => {
        if (!title) {
            return null;
        }
        return React.createElement("div", { className: b('title') }, title);
    };
    const renderDescription = () => {
        if (!description) {
            return null;
        }
        return React.createElement("div", { className: b('description') }, description);
    };
    const renderImage = () => {
        if (typeof image === 'object' && 'src' in image) {
            return React.createElement("img", { src: image.src, alt: image.alt || '' });
        }
        return image;
    };
    const renderAction = () => {
        if (!actions || !(React.isValidElement(actions) || Array.isArray(actions))) {
            return null;
        }
        if (React.isValidElement(actions)) {
            return React.createElement(React.Fragment, null, actions);
        }
        return (React.createElement("div", { className: b('actions') }, actions.map((actionItem) => (React.createElement(PlaceholderContainerAction, Object.assign({ key: actionItem.text }, actionItem))))));
    };
    const renderContent = () => {
        const contentNode = content || (React.createElement(React.Fragment, null,
            renderTitle(),
            renderDescription()));
        return (React.createElement("div", { className: b('content', { size }) },
            contentNode,
            renderAction()));
    };
    return (React.createElement("div", { className: b({ direction, align, size }, className || '') },
        React.createElement("div", { className: b('body') },
            React.createElement("div", { className: b('image', { size }) }, renderImage()),
            renderContent())));
};
