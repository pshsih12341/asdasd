import React from 'react';
import type { PopupPlacement } from '../../Popup';
import type { AriaLabelingProps, DOMProps, Href, Key, QAProps, RouterOptions } from '../../types';
import './Breadcrumbs.css';
export interface BreadcrumbsItemProps {
    children: React.ReactNode;
    title?: string;
    href?: Href;
    hrefLang?: string;
    target?: React.HTMLAttributeAnchorTarget;
    rel?: string;
    download?: boolean | string;
    ping?: string;
    referrerPolicy?: React.HTMLAttributeReferrerPolicy;
    'aria-label'?: string;
    routerOptions?: RouterOptions;
}
declare function Item(_props: BreadcrumbsItemProps): React.ReactElement | null;
export interface BreadcrumbsProps extends DOMProps, AriaLabelingProps, QAProps {
    id?: string;
    showRoot?: boolean;
    separator?: React.ReactNode;
    maxItems?: number;
    popupStyle?: 'staircase';
    popupPlacement?: PopupPlacement;
    children: React.ReactElement<BreadcrumbsItemProps> | React.ReactElement<BreadcrumbsItemProps>[];
    navigate?: (href: Href, routerOptions: RouterOptions | undefined) => void;
    disabled?: boolean;
    onAction?: (key: Key) => void;
}
export declare const Breadcrumbs: BreadcrumbsComponent;
type BreadcrumbsComponent = React.FunctionComponent<BreadcrumbsProps & {
    ref?: React.Ref<HTMLElement>;
}> & {
    Item: typeof Item;
};
export { Item as BreadcrumbsItem };
