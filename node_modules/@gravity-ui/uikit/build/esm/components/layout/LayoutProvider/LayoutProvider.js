'use client';
/* eslint-disable valid-jsdoc */
import React from 'react';
import { LayoutContext } from '../contexts/LayoutContext';
import { useCurrentActiveMediaQuery } from '../hooks/useCurrentActiveMediaQuery';
import { overrideLayoutTheme } from '../utils/overrideLayoutTheme';
export function PrivateLayoutProvider({ children, config: override, initialMediaQuery, }) {
    const parentContext = React.useContext(LayoutContext);
    const theme = React.useMemo(() => overrideLayoutTheme({ theme: parentContext.theme, override }), [override, parentContext.theme]);
    const activeMediaQuery = useCurrentActiveMediaQuery(theme.breakpoints, initialMediaQuery);
    const value = React.useMemo(() => ({ activeMediaQuery, theme }), [activeMediaQuery, theme]);
    return React.createElement(LayoutContext.Provider, { value: value }, children);
}
/**
 * @deprecated - already used as part of ThemeProvider. To override layout theme use `layout` prop
 *
 * Provide context for layout components and current media queries.
 * ---
 * Storybook - https://preview.gravity-ui.com/uikit/?path=/docs/layout--playground#layoutprovider-and-layouttheme
 */
export function LayoutProvider({ children }) {
    return children;
}
