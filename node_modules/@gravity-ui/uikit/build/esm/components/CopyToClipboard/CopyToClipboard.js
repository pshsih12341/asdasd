'use client';
import React from 'react';
import ReactCopyToClipboard from 'react-copy-to-clipboard';
const INITIAL_STATUS = 'pending';
export function CopyToClipboard(props) {
    const { children, text, options, timeout, onCopy } = props;
    const [status, setStatus] = React.useState(INITIAL_STATUS);
    const timerIdRef = React.useRef();
    const content = React.useMemo(() => children(status), [children, status]);
    const handleCopy = React.useCallback((copyText, result) => {
        setStatus(result ? 'success' : 'error');
        window.clearTimeout(timerIdRef.current);
        timerIdRef.current = window.setTimeout(() => setStatus(INITIAL_STATUS), timeout);
        onCopy === null || onCopy === void 0 ? void 0 : onCopy(copyText, result);
    }, [onCopy, timeout]);
    React.useEffect(() => () => window.clearTimeout(timerIdRef.current), []);
    if (!React.isValidElement(content)) {
        throw new Error('Content must be a valid react element');
    }
    return (React.createElement(ReactCopyToClipboard, { text: text, onCopy: handleCopy, options: options }, content));
}
