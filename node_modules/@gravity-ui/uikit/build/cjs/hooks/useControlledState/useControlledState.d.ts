export declare function useControlledState<T, C = T, Args extends any[] = []>(value: Exclude<T, undefined>, defaultValue: Exclude<T, undefined> | undefined, onChange?: (v: C, ...args: Args) => void): [T, (value: C, ...args: Args) => void];
export declare function useControlledState<T, C = T, Args extends any[] = []>(value: Exclude<T, undefined> | undefined, defaultValue: Exclude<T, undefined>, onChange?: (v: C, ...args: Args) => void): [T, (value: C, ...args: Args) => void];
