"use strict";
'use client';
Object.defineProperty(exports, "__esModule", { value: true });
exports.HiddenSelect = void 0;
const tslib_1 = require("tslib");
const react_1 = tslib_1.__importDefault(require("react"));
const private_1 = require("../../../../hooks/private");
//FIXME: current implementation is not accessible to screen readers and does not support browser autofill and
// form validation
function HiddenSelect(props) {
    const { name, value, disabled, form, onReset } = props;
    const ref = (0, private_1.useFormResetHandler)({ onReset, initialValue: value });
    if (!name || disabled) {
        return null;
    }
    if (value.length === 0) {
        return (react_1.default.createElement("input", { ref: ref, type: "hidden", name: name, value: value, form: form, disabled: disabled }));
    }
    return (react_1.default.createElement(react_1.default.Fragment, null, value.map((v, i) => (react_1.default.createElement("input", { key: v, ref: i === 0 ? ref : undefined, value: v, type: "hidden", name: name, form: form, disabled: disabled })))));
}
exports.HiddenSelect = HiddenSelect;
