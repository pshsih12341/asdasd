import React from 'react';
import type { SelectProps, SelectRenderControl, SelectRenderCounter } from '../../types';
import './SelectControl.css';
type ControlProps = {
    toggleOpen: () => void;
    renderControl?: SelectRenderControl;
    renderCounter?: SelectRenderCounter;
    view: NonNullable<SelectProps['view']>;
    size: NonNullable<SelectProps['size']>;
    pin: NonNullable<SelectProps['pin']>;
    selectedOptionsContent: React.ReactNode;
    className?: string;
    qa?: string;
    label?: string;
    placeholder?: SelectProps['placeholder'];
    isErrorVisible?: boolean;
    errorMessage?: SelectProps['errorMessage'];
    disabled?: boolean;
    value: NonNullable<SelectProps['value']>;
    clearValue: () => void;
    hasClear?: boolean;
    hasCounter?: boolean;
    title?: string;
    onKeyDown?: (e: React.KeyboardEvent<HTMLElement>) => void;
    open: boolean;
    popupId: string;
    selectId: string;
    activeIndex?: number;
};
export declare const SelectControl: React.ForwardRefExoticComponent<ControlProps & React.RefAttributes<HTMLButtonElement>>;
export {};
