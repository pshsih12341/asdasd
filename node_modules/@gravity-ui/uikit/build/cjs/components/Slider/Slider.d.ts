import React from 'react';
import './Slider.css';
export declare const Slider: React.ForwardRefExoticComponent<{
    value?: number | [number, number] | undefined;
    defaultValue?: number | [number, number] | undefined;
    size?: import("./types").SliderSize | undefined;
    min?: number | undefined;
    max?: number | undefined;
    marks?: number | number[] | undefined;
    markFormat?: ((value: number) => string) | undefined;
    availableValues?: number[] | undefined;
    step?: number | null | undefined;
    marksCount?: number | undefined;
    hasTooltip?: boolean | undefined;
    tooltipDisplay?: import("./types").TooltipDisplayType | undefined;
    tooltipFormat?: ((value: number) => string) | undefined;
    disabled?: boolean | undefined;
    errorMessage?: string | undefined;
    validationState?: "invalid" | undefined;
    debounceDelay?: number | undefined;
    onFocus?: ((e: React.FocusEvent<HTMLDivElement, Element>) => void) | undefined;
    onBlur?: ((e: React.FocusEvent<HTMLDivElement, Element>) => void) | undefined;
    onUpdate?: ((value: number | [number, number]) => void) | undefined;
    onUpdateComplete?: ((value: number | [number, number]) => void) | undefined;
    autoFocus?: boolean | undefined;
    tabIndex?: number | [number, number] | undefined;
    apiRef?: React.RefObject<import("rc-slider").SliderRef> | undefined;
    'aria-label'?: string | undefined;
    'aria-labelledby'?: string | undefined;
} & Pick<import("..").DOMProps, "className"> & import("..").QAProps & React.RefAttributes<HTMLDivElement>>;
