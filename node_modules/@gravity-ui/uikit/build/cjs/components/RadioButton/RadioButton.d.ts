import React from 'react';
import type { ControlGroupOption, ControlGroupProps, DOMProps, QAProps } from '../types';
import { RadioButtonOption as Option } from './RadioButtonOption';
import './RadioButton.css';
export type RadioButtonOption<T extends string = string> = ControlGroupOption<T>;
export type RadioButtonSize = 's' | 'm' | 'l' | 'xl';
export type RadioButtonWidth = 'auto' | 'max';
export interface RadioButtonProps<T extends string = string> extends ControlGroupProps<T>, DOMProps, QAProps {
    size?: RadioButtonSize;
    width?: RadioButtonWidth;
    children?: React.ReactElement<ControlGroupOption<T>> | React.ReactElement<ControlGroupOption<T>>[];
}
type RadioButtonComponentType = (<T extends string>(props: RadioButtonProps<T> & {
    ref?: React.ForwardedRef<HTMLDivElement>;
}) => React.JSX.Element) & {
    Option: typeof Option;
};
export declare const RadioButton: RadioButtonComponentType;
export {};
