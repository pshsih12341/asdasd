"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AvatarStack = void 0;
const tslib_1 = require("tslib");
const react_1 = tslib_1.__importDefault(require("react"));
const Avatar_1 = require("../Avatar");
const cn_1 = require("../utils/cn");
const AvatarStackItem_1 = require("./AvatarStackItem");
const AvatarStackMoreButton_1 = require("./AvatarStackMoreButton");
const i18n_1 = tslib_1.__importDefault(require("./i18n"));
require("./AvatarStack.css");
const b = (0, cn_1.block)('avatar-stack');
const AvatarStackComponent = ({ max = 3, total, overlapSize = 's', size, children, className, renderMore, }) => {
    const visibleItems = [];
    let moreItems = 0;
    const normalizedMax = max < 1 ? 1 : max;
    react_1.default.Children.forEach(children, (child) => {
        if (!react_1.default.isValidElement(child)) {
            return;
        }
        const item = react_1.default.createElement(AvatarStackItem_1.AvatarStackItem, { key: visibleItems.length }, child);
        if (visibleItems.length <= normalizedMax) {
            visibleItems.unshift(item);
        }
        else {
            moreItems += 1;
        }
    });
    moreItems = Math.max(moreItems, total ? total - normalizedMax : 0);
    const hasMoreButton = moreItems > 0;
    /** Avatars + more button, or just avatars, when avatars count is equal to `max` or less */
    const normalOverflow = moreItems >= 1;
    return (
    // Safari remove role=list with some styles, applied to li items, so we need
    // to restore role manually
    // eslint-disable-next-line jsx-a11y/no-redundant-roles
    react_1.default.createElement("ul", { className: b({ 'overlap-size': overlapSize }, className), role: 'list' },
        hasMoreButton ? (react_1.default.createElement(AvatarStackItem_1.AvatarStackItem, { key: "more-button" }, renderMore ? (renderMore({ count: moreItems })) : (react_1.default.createElement(Avatar_1.Avatar, { text: `+${moreItems}`, "aria-label": (0, i18n_1.default)('more', { count: moreItems }), size: size })))) : null,
        normalOverflow ? visibleItems.slice(0, normalizedMax) : visibleItems));
};
AvatarStackComponent.displayName = 'AvatarStack';
exports.AvatarStack = Object.assign(AvatarStackComponent, { MoreButton: AvatarStackMoreButton_1.AvatarStackMoreButton });
