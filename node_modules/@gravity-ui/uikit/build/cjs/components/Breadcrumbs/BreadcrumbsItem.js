"use strict";
'use client';
Object.defineProperty(exports, "__esModule", { value: true });
exports.BreadcrumbsItem = void 0;
const tslib_1 = require("tslib");
const react_1 = tslib_1.__importDefault(require("react"));
const Link_1 = require("../Link");
const cn_1 = require("../utils/cn");
const BreadcrumbsButton_1 = require("./BreadcrumbsButton");
const b = (0, cn_1.block)('breadcrumbs');
function Item({ item, isCurrent, isPrevCurrent, renderItemContent, renderItem, }) {
    const children = renderItemContent
        ? renderItemContent(item, isCurrent, isPrevCurrent)
        : item.text;
    if (renderItem) {
        return renderItem({ item, children, isCurrent, isPrevCurrent });
    }
    const itemTitle = item.title || item.text;
    if (isPrevCurrent || !isCurrent) {
        if (item.href !== undefined) {
            return (react_1.default.createElement(Link_1.Link, { key: item.text, view: "secondary", href: item.href, title: itemTitle, onClick: item.action, className: b('item', { 'prev-current': isPrevCurrent }) }, children));
        }
        return (react_1.default.createElement(BreadcrumbsButton_1.BreadcrumbsButton, { key: item.text, title: itemTitle, onClick: item.action }, children));
    }
    return (react_1.default.createElement("div", { title: itemTitle, className: b('item', { current: true }) }, children));
}
exports.BreadcrumbsItem = react_1.default.memo(Item);
exports.BreadcrumbsItem.displayName = 'Breadcrumbs.Item';
